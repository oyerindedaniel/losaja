@use "./variables" as vars;
@use "sass:color";

@mixin box-style($backgroundColor) {
  width: 5.4rem;
  height: 5rem;
  border-radius: 1rem;
  background-color: $backgroundColor;
  box-shadow: 0px 4px 15.5px -8px rgba(0, 0, 0, 0.25);
}

%dynamic-box-white {
  @include box-style(vars.$white);
}

%dynamic-box-orange {
  @include box-style(vars.$primary-color);
}

@mixin button-style(
  $height: 5rem,
  $border-radius: 1rem,
  $padding-vertical: 2rem,
  $padding-horizontal: 2.3rem,
  $background-color: #3498db,
  $text-color: #ffffff
) {
  height: $height;
  border-radius: $border-radius;
  padding: $padding-vertical $padding-horizontal;
  background-color: $background-color;
  color: $text-color;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  border: none;
  transition: background-color 0.3s ease, color 0.3s ease;

  &:hover {
    background-color: color.adjust($background-color, $lightness: -10%);
  }

  &:active {
    background-color: color.adjust($background-color, $lightness: -15%);
  }

  &:focus {
    outline: 2px solid color.adjust($background-color, $lightness: -10%);
    outline-offset: 2px;
  }
}

%button-primary {
  @include button-style(
    5rem,
    1rem,
    2rem,
    2.3rem,
    vars.$primary-color,
    vars.$white
  );
}

%button-secondary {
  @include button-style(5rem, 1rem, 2rem, 2.3rem, vars.$white, vars.$black);
}

%button-dark {
  @include button-style(5rem, 1rem, 2rem, 2.3rem, vars.$black, vars.$white);
}

@mixin image-container($bg-color: #f0f0f0, $size: 60px) {
  display: flex;
  align-items: center;
  justify-content: center;
  width: $size;
  height: $size;
  background-color: $bg-color;
  border-radius: 1rem;
  border: 1px solid vars.$black;
  margin-bottom: 3rem;
}

@mixin image-style($width: 40px, $height: 40px) {
  width: $width;
  height: $height;
  object-fit: cover;
}

@mixin infinite-scroll($duration: 6s, $direction: left) {
  @keyframes primary-scroll {
    from {
      transform: translateX(0%);
    }
    to {
      transform: translateX(if($direction == left, -100%, 100%));
    }
  }

  @keyframes secondary-scroll {
    from {
      transform: translateX(if($direction == left, 100%, -100%));
    }
    to {
      transform: translateX(0%);
    }
  }

  .scroll-item-primary {
    animation: primary-scroll $duration linear infinite;
    position: absolute;
    height: inherit;
    white-space: nowrap;
  }

  .scroll-item-secondary {
    animation: secondary-scroll $duration linear infinite;
    position: absolute;
    height: inherit;
    white-space: nowrap;
    transform: translateX(if($direction == left, 100%, -100%));
  }
}
